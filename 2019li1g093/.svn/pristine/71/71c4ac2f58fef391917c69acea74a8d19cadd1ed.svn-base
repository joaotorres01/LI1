-- | Este módulo define funções comuns da Tarefa 5 do trabalho prático.
module Main where

import LI11920
import Graphics.Gloss.Juicy

-- | Função principal da Tarefa 5.
--
-- __NB:__ Esta Tarefa é completamente livre. Deve utilizar a biblioteca <http://hackage.haskell.org/package/gloss gloss> para animar o jogo, e reutilizar __de forma completa__ as funções das tarefas anteriores.
main :: IO ()
main = undefined

type Estado = (Float,Float)
type EstadoGloss = (Estado, Picture)


estadoInicial :: Estado
estadoInicial = 

desenhaEstado :: Estado -> Picture
desenhaEstado = 

reageEvento :: Event -> Estado -> Estado
reageEvento (EventKey (SpecialKey KeyUp)    Down _ _) (x,y) = (x,y+5)
reageEvento (EventKey (SpecialKey KeyDown)  Down _ _) (x,y) = (x,y-5)
reageEvento (EventKey (SpecialKey KeyLeft)  Down _ _) (x,y) = (x-5,y)
reageEvento (EventKey (SpecialKey KeyRight) Down _ _) (x,y) = (x+5,y)
reageEvento _ s = s -- ignora qualquer outro evento

reageTempo :: Float -> Estado -> Estado
reageTempo n (x,y) = 

fr :: Int
fr = 50

dm :: Display
dm = InWindow "Novo Jogo" (400, 400) (0, 0)

main :: IO ()
main = do play dm         -- janela onde irá correr o jogo
          (greyN 0.5)     -- côr do fundo da janela
          fr              -- frame rate
          estadoInicial   -- estado inicial
          desenhaEstado   -- desenha o estado do jogo
          reageEvento     -- reage a um evento
          reageTempo      -- reage ao passar do tempo




main :: IO ()
main = do p <- loadBMP “imagem.bmp”
  play dm                   -- janela onde irá correr o jogo
    (greyN 0.5)             -- côr do fundo da janela
    fr                      -- frame rate
    (estadoGlossInicial p)  -- estado inicial
    desenhaEstadoGloss      -- desenha o estado do jogo
    reageEventoGloss        -- reage a um evento
    reageTempoGloss         -- reage ao passar do tempo

